from selenium import webdriver
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from webdriver_manager.chrome import ChromeDriverManager

def extract_ingredients(diabetes_uk_url):
    options = Options()
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)
    
    driver = webdriver.Chrome()
    driver.get(diabetes_uk_url)

    ingredients = driver.find_elements(By.CLASS_NAME, 'recipeIngredient')

    ingredients_list = [ingredient.text for ingredient in ingredients]
    driver.quit()
    return ingredients_list

def input_ingredients_nutrition_calculator(ingredients_list, nutrition_calculator_url):
    options = Options()
    service = Service(ChromeDriverManager().install())
    driver = webdriver.Chrome(service=service, options=options)
    
    driver = webdriver.Chrome()
    driver.get(nutrition_calculator_url)

    for ingredient in ingredients_list:
        input_field = WebDriverWait(driver, 10).until(
            EC.presence_of_element_located((By.ID, "input_field_id")) 
        )
        input_field.clear()
        input_field.send_keys(ingredient)
        input_field.send_keys(Keys.RETURN)


# Main flow
if __name__ == "__main__":
    diabetes_uk_url = input("Enter the Diabetes UK recipe URL: ")
    ingredients_list = extract_ingredients(diabetes_uk_url)
    nutrition_calculator_url = 'https://www.nutritionvalue.org/nutritioncalculator.php'
    input_ingredients_nutrition_calculator(ingredients_list, nutrition_calculator_url)
